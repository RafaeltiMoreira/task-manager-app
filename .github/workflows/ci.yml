name: CI/CD Pipeline
on:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          pip install pytest pytest-mock
      - name: Build Docker Image
        run: |
          docker build -t task_project .
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASS }}
      - name: Run Tests
        run: |
          pytest todo_project/tests/
      - name: Remove existing Grafana container
        run: |
          docker stop grafana || true
          docker rm grafana || true
          docker stop prometheus || true
          docker rm prometheus || true
      - name: Setup Grafana
        run: |
          docker run -d --name grafana -p 3030:3000 grafana/grafana
      - name: Stop existing Prometheus container
        run: |
          docker stop prometheus || true
          docker rm prometheus || true
      - name: Setup Prometheus
        run: |
          docker run -d --name prometheus -p 3035:9090 prom/prometheus
      - name: Login to Docker Hub
        run: docker login -u rafatixone29atena -p ${{ secrets.HUB_TOKEN }}
      - name: Pull Docker Image from Docker Hub
        run: docker pull rafatixone29atena/web
      - name: Run Docker Image
        run: docker run -p 5000:5000 rafatixone29atena/web
      - name: Subir cobertura para o codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Setup Grafana with Docker Compose
        run: |
          docker-compose down
          docker-compose up -d
      - name: Run Bandit
        run: python -m bandit -r todo_project/ -f txt -o bandit-report.txt || true
      - name: Run Dependency-Check
        run: >
          wget
          https://github.com/jeremylong/DependencyCheck/releases/download/v6.5.0/dependency-check-6.5.0-release.zip

          unzip dependency-check-6.5.0-release.zip

          chmod +x ./dependency-check/bin/dependency-check.sh

          ./dependency-check/bin/dependency-check.sh --project "Task Manager" --out dependency-check-report.html --scan .